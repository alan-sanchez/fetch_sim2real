<launch>

 <!-- Run the main MoveIt executable -->
 <arg name="debug" default="false" />
 <arg name="pipeline" default="$(optenv PLANNING_PIPELINE ompl)" />
 <include file="$(find fetch_sim2real)/launch/move_group.launch">
   <arg name="allow_active_sensing" default="true"/>
   <arg name="debug" value="$(arg debug)"/>
   <arg name="pipeline" value="$(arg pipeline)" />
 </include>


 <node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
   <!-- Reoslution in meter for the map when starting an empty map -->
   <param name="resolution" value="0.05" />
   <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
   <param name="frame_id" type="string" value="odom" />
   <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
   <param name="base_frame_id" type="string" value="base_link" />
   <!-- maximum range to integrate (speedup!) -->
   <param name="sensor_model/max_range" value="5.0" />
   <!-- Max performance when building a map -->
   <param name="latch" type="bool" value="True" />
   <param name="filter_ground" type="bool" value="true" />
   <param name="ground_filter/distance" type="double" value="0.04" />
   <param name="ground_filter/angle" type="double" value="0.15" />
   <param name="ground_filter/plane" type="double" value="0.07" />

   <!-- data source to integrate (PointCloud2) -->
   <remap from="cloud_in" to="/move_group/filtered_cloud" />
 </node>

 <!-- Start rviz with custom rviz config file  -->
 <node type="rviz" name="rviz" pkg="rviz" args="-d $(find fetch_sim2real)/rviz/default.rviz" />

 <!-- <include file="$(find boustrophedon_server)/launch/boustrophedon_server.launch" /> -->

 <!-- Start Convex Hull, Plane Fitting, GUI, Waypoint Generator, and Move Group Interface nodes -->
<node pkg="fetch_sim2real" type="region_generator.py"        name="convex_hull_region" output="screen"/>
<node pkg="fetch_sim2real" type="waypoint_generator.py"      name="accumulation"       output="screen"/>
<node pkg="fetch_sim2real" type="pcl_filter.py"              name="pcl_filter"         output="screen"/>
<!-- <node pkg="fetch_sim2real" type="irradiance_vectors.py" name="irradiance_vectors"output="screen"/> -->
<node pkg="fetch_sim2real" type="execute_path.py"            name="execute_path"       output="screen"/>


</launch>
